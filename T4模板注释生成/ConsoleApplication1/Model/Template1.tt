<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ include file="GetSummery.ttinclude"#>
<#
   // insert your template code here the tempalte code will be syntaxhighlighted 
   // and you will have intellisense for all namespaces in the full edition
   string Greeting = "Hello";
	var	fileManager = EntityFrameworkTemplateFileManager.Create(this);
	#>
// This is the output code from your template
// you only get syntax-highlighting here - not intellisense
namespace MyNameSpace{
  class MyGeneratedClass{
     static void main (string[] args){
       System.Console.WriteLine("<#= Greeting #>, the time is now: <#= System.DateTime.Now.ToString() #>");
     }
  }
}

<#
   
        var ItemCollection =new List<string>(){"op","po","lp"};
        foreach(var entity in ItemCollection) {
            fileManager.StartNewFile(entity + "Service.cs");
#>
<# for(int i=0;i<10;i++)
{ #>
opop
<#= i#>
llll
<#
}
#>
<#
       }

        //一定要放在foreach(var entity in ItemCollection.GetItems<EntityType>().OrderBy(e=>e.Name))循环外面
        fileManager.Process();
    #>

<#+
  // Insert any template procedures here
  void foo(){}
 
#>
